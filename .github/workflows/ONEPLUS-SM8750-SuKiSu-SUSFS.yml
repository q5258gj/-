name: OnePlus SM8750 High-Efficiency Build Pipeline
on:
  workflow_dispatch:
    inputs:
      DEVICE:
        description: "设备分支（如sm8750）"
        required: true
        default: sm8750
      KSU_VER:
        description: "KernelSU版本"
        required: true
        default: 10606

jobs:
  build_kernel:
    runs-on: ubuntu-22.04  # 使用最新Ubuntu版本
    concurrency: 
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true  # 自动取消相同工作流中的重复运行

    env:
      WORKSPACE: ${{ github.workspace }}/kernel
      CCACHE_DIR: ${{ github.workspace }}/ccache
      CCACHE_COMPRESS: true
      CCACHE_MAXSIZE: 50G  # 扩大缓存至50GB
      BAZEL_OPTS: "--config=opt --local_ram_resources=8192 --jobs=8"

    steps:
      - name: Initialize Workspace
        uses: actions/checkout@v4
        with:
          submodules: recursive  # 一次性拉取所有子模块

      - name: Maximize Disk Space
        uses: einverne/maximize-build-space-action@v3
        with:
          remove-android: true
          remove-dotnet: true
          remove-haskell: true

      - name: Setup Environment
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends \
            python3 python3-pip git curl build-essential bc bison flex libssl-dev ccache rsync
          sudo pip3 install --upgrade pip
          sudo ccache --set-config=max_size=50G

      - name: Setup Repo Tool
        run: |
          mkdir -p ~/bin
          curl -fsSL https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          export PATH="$HOME/bin:$PATH"

      - name: Sync Kernel Sources
        uses: actions/cache@v3
        id: sync_cache
        with:
          path: kernel_workspace
          key: ${{ runner.os }}-kernel-sync-${{ hashFiles('**/manifest.xml') }}
          restore-keys: |
            ${{ runner.os }}-kernel-sync-
        continue-on-error: true  # 允许部分失败
        run: |
          retry() {
            local n=0
            until [ $n -ge 3 ]; do
              "$@" && break
              n=$((n+1))
              echo "Sync failed, retrying ($n/3)..."
              sleep 15
            done
            "$@" || exit 1
          }
          retry repo init -u https://github.com/JiuGeFaCai/kernel_manifest.git \
            -b refs/heads/oneplus/${{ inputs.DEVICE }} \
            -m ${{ github.event.inputs.CONFIG }}.xml \
            --depth=1 \
            --no-clone-bundle  # 关键优化：禁用bundle下载

      - name: Apply Patches
        run: |
          cd $WORKSPACE/kernel_platform
          # 应用SUSFS补丁
          patch -p1 < ../../../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.KERNEL_VERSION }}.patch
          # 应用KernelSU补丁
          patch -p1 < ../../../SukiSU_patch/hooks/syscall_hooks.patch

      - name: Configure Kernel
        run: |
          make O=out ARCH=arm64 gki_defconfig
          # 启用高级优化
          sed -i 's/# CONFIG_LTO is not set/CONFIG_LTO=y/' .config
          sed -i 's/# CONFIG_BLK_INLINE_ENCRYPTION is not set/CONFIG_BLK_INLINE_ENCRYPTION=y/' .config

      - name: Build Kernel
        uses: actions/cache@v3
        id: build_cache
        with:
          path: |
            ${{ github.workspace }}/out
            ${{ github.workspace }}/bazel-bin
          key: ${{ runner.os }}-kernel-build-${{ hashFiles('**/*.config') }}
        run: |
          time ccache make -j$(nproc) O=out ARCH=arm64 \
            ${BAZEL_OPTS} \
            KCFLAGS="-fno-pie -flto=thin -fuse-ld=lld"  # 关键优化：LTO+LLD链接器

      - name: Package Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: kernel-image-${{ github.run_number }}
          path: |
            ${{ github.workspace }}/out/arch/arm64/boot/Image*
            ${{ github.workspace }}/out/System.map*
          retention-days: 14

      - name: Upload to S3 (Optional)
        uses: jakejarvis/s3-upload-action@v3
        if: github.ref == 'refs/heads/main'
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          bucket: ${{ secrets.S3_BUCKET }}
          region: us-east-1
          source: out/*
          acl: public-read
          strip-components: 0

  cleanup:
    needs: build_kernel
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup Build Artifacts
        run: |
          rm -rf ${{ github.workspace }}/out
          rm -rf ${{ github.workspace }}/bazel-bin
          ccache -C  # 清空缓存
